############################################################
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: {{ include "mychart.fullname" . }}
#  labels:
#    {{- include "mychart.labels" . | nindent 4 }}
#spec:
#  {{- if not .Values.autoscaling.enabled }}
#  replicas: {{ .Values.replicaCount }}
#  {{- end }}
#  selector:
#    matchLabels:
#      {{- include "mychart.selectorLabels" . | nindent 6 }}
#  template:
#    metadata:
#      {{- with .Values.podAnnotations }}
#      annotations:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      labels:
#        {{- include "mychart.selectorLabels" . | nindent 8 }}
#    spec:
#      {{- with .Values.imagePullSecrets }}
#      imagePullSecrets:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      serviceAccountName: {{ include "mychart.serviceAccountName" . }}
#      securityContext:
#        {{- toYaml .Values.podSecurityContext | nindent 8 }}
#      containers:
#        - name: {{ .Chart.Name }}
#          securityContext:
#            {{- toYaml .Values.securityContext | nindent 12 }}
#          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
#          imagePullPolicy: {{ .Values.image.pullPolicy }}
#          ports:
#            - name: http
#              containerPort: 80
#              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
#          resources:
#            {{- toYaml .Values.resources | nindent 12 }}
#      {{- with .Values.nodeSelector }}
#      nodeSelector:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      {{- with .Values.affinity }}
#      affinity:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      {{- with .Values.tolerations }}
#      tolerations:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#####################################################

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: db
        spec:
          containers:
            - args:
                - mongod
                - --port
                - "27017"
              image: mongo
              name: mongodb
              ports:
                - containerPort: 27017
              resources: {}
              volumeMounts:
                - mountPath: /data/db
                  name: dbdata
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /home/thiago/free5gc-k8s
              name: dbdata
    status: {}


  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: privnet
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/privnet: "true"
      podSelector:
        matchLabels:
          io.kompose.network/privnet: "true"


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-amf
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-amf
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-amf
        spec:
          containers:
            - args:
                - ./amf
                - -amfcfg
                - ../config/amfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/amf:latest
              name: amf
              ports:
                - containerPort: 29518
              resources: {}
              # volumeMounts:
              #   - mountPath: /free5gc/config/amfcfg.conf
              #     name: free5gc-amf-hostpath0
              #   - mountPath: /free5gc/config/free5GC.conf
              #     name: free5gc-amf-hostpath1
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/amfcfg.conf
          #     name: free5gc-amf-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/free5GC.conf
          #     name: free5gc-amf-hostpath1
    status: {}


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-ausf
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-ausf
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-ausf
        spec:
          containers:
            - args:
                - ./ausf
                - -ausfcfg
                - ../config/ausfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/ausf:latest
              name: ausf
              ports:
                - containerPort: 29509
              resources: {}
              # volumeMounts:
              #   - mountPath: /free5gc/config/ausfcfg.conf
              #     name: free5gc-ausf-hostpath0
              #   - mountPath: /free5gc/config/free5GC.conf
              #     name: free5gc-ausf-hostpath1
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/ausfcfg.conf
          #     name: free5gc-ausf-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/free5GC.conf
          #     name: free5gc-ausf-hostpath1
    status: {}


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-nrf
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-nrf
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-nrf
        spec:
          containers:
            - args:
                - ./nrf
                - -nrfcfg
                - ../config/nrfcfg.conf
              env:
                - name: DB_URI
                  value: mongodb://db/free5gc
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nf_nrf:latest
              name: nrf
              ports:
                - containerPort: 29510
              resources: {}
              # volumeMounts:
              #   - mountPath: /free5gc/config/nrfcfg.conf
              #     name: free5gc-nrf-hostpath0
              #   - mountPath: /free5gc/config/free5GC.conf
              #     name: free5gc-nrf-hostpath1
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/nrfcfg.conf
          #     name: free5gc-nrf-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/free5GC.conf
          #     name: free5gc-nrf-hostpath1
    status: {}


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-nssf
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-nssf
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-nssf
        spec:
          containers:
            - args:
                - ./nssf
                - -nssfcfg
                - ../config/nssfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/nssf:latest
              name: nssf
              ports:
                - containerPort: 29531
              resources: {}
              # volumeMounts:
              #   - mountPath: /free5gc/config/nssfcfg.conf
              #     name: free5gc-nssf-hostpath0
              #   - mountPath: /free5gc/config/free5GC.conf
              #     name: free5gc-nssf-hostpath1
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/nssfcfg.conf
          #     name: free5gc-nssf-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/free5GC.conf
          #     name: free5gc-nssf-hostpath1
    status: {}


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-pcf
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-pcf
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-pcf
        spec:
          containers:
            - args:
                - ./pcf
                - -pcfcfg
                - ../config/pcfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/pcf:latest
              name: pcf
              ports:
                - containerPort: 29507
              resources: {}
              # volumeMounts:
              #   - mountPath: /free5gc/config/pcfcfg.conf
              #     name: free5gc-pcf-hostpath0
              #   - mountPath: /free5gc/config/free5GC.conf
              #     name: free5gc-pcf-hostpath1
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/pcfcfg.conf
          #     name: free5gc-pcf-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/free5GC.conf
          #     name: free5gc-pcf-hostpath1
    status: {}


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-smf
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-smf
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-smf
        spec:
          containers:
            - args:
                - ./smf
                - -smfcfg
                - ../config/smfcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/smf:latest
              name: smf
              ports:
                - containerPort: 29502
              resources: {}
              # volumeMounts:
              #   - mountPath: /free5gc/config/smfcfg.conf
              #     name: free5gc-smf-hostpath0
              #   - mountPath: /free5gc/config/uerouting.yaml
              #     name: free5gc-smf-hostpath1
              #   - mountPath: /free5gc/config/free5GC.conf
              #     name: free5gc-smf-hostpath2
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/smfcfg.conf
          #     name: free5gc-smf-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/uerouting.yaml
          #     name: free5gc-smf-hostpath1
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/free5GC.conf
          #     name: free5gc-smf-hostpath2
    status: {}


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-udm
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-udm
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-udm
        spec:
          containers:
            - args:
                - ./udm
                - -udmcfg
                - ../config/udmcfg.conf
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/udm:latest
              name: udm
              ports:
                - containerPort: 29503
              resources: {}
              # volumeMounts:
              #   - mountPath: /free5gc/config/udmcfg.conf
              #     name: free5gc-udm-hostpath0
              #   - mountPath: /free5gc/config/free5GC.conf
              #     name: free5gc-udm-hostpath1
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/udmcfg.conf
          #     name: free5gc-udm-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/free5GC.conf
          #     name: free5gc-udm-hostpath1
    status: {}


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-udr
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-udr
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-udr
        spec:
          containers:
            - args:
                - ./udr
                - -udrcfg
                - ../config/udrcfg.conf
              env:
                - name: DB_URI
                  value: mongodb://db/free5gc
                - name: GIN_MODE
                  value: release
              image: thiagogmta/udr:latest
              name: udr
              ports:
                - containerPort: 29504
              resources: {}
              # volumeMounts:
              #   - mountPath: /free5gc/config/udrcfg.conf
              #     name: free5gc-udr-hostpath0
              #   - mountPath: /free5gc/config/free5GC.conf
              #     name: free5gc-udr-hostpath1
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/udrcfg.conf
          #     name: free5gc-udr-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/free5GC.conf
          #     name: free5gc-udr-hostpath1
    status: {}

    
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-upf
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-upf
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-upf
        spec:
          containers:
            - args:
                - bash
                - -c
                # - ./router.sh && ./free5gc-upfd -f ../config/upfcfg.yaml
              image: thiagogmta/upf:latest
              name: upf
              resources: {}
              securityContext:
                capabilities:
                  add:
                    - NET_ADMIN
              # volumeMounts:
              #   - mountPath: /free5gc/config/upfcfg.yaml
              #     name: free5gc-upf-hostpath0
              #   - mountPath: /free5gc/free5gc-upfd/router.sh
              #     name: free5gc-upf-hostpath1
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/upfcfg.yaml
          #     name: free5gc-upf-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/router.sh
          #     name: free5gc-upf-hostpath1
    status: {}


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: free5gc-webui
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: free5gc-webui
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: free5gc-webui
        spec:
          containers:
            - args:
                - ./webui
              env:
                - name: GIN_MODE
                  value: release
              image: thiagogmta/webui:latest
              name: webui
              ports:
                - containerPort: 5000
              resources: {}
              # volumeMounts:
                # - mountPath: /free5gc/config/webuicfg.conf
                #   name: free5gc-webui-hostpath0
                # - mountPath: /free5gc/config/free5GC.conf
                #   name: free5gc-webui-hostpath1
          restartPolicy: Always
          # volumes:
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/webuicfg.conf
          #     name: free5gc-webui-hostpath0
          #   - hostPath:
          #       path: /home/thiago/free5gc-k8s/config/free5GC.conf
          #     name: free5gc-webui-hostpath1
    status: {}


  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: tester
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: tester
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            io.kompose.network/privnet: "true"
            io.kompose.service: tester
        spec:
          containers:
            - args:
                - ./app
                - ue
              image: thiagogmta/tester:latest
              name: tester
              resources: {}
              securityContext:
                capabilities:
                  add:
                    - NET_ADMIN
              volumeMounts:
                - mountPath: /workspace/my5G-RANTester/config/config.yml
                  name: tester-hostpath0
          restartPolicy: Always
          volumes:
            - hostPath:
                path: /home/thiago/free5gc-k8s/config/tester.yaml
              name: tester-hostpath0
    status: {}
kind: List
metadata: {}
